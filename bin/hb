#!/usr/bin/env node

var join = require('path').join;
var exists = require('fs').existsSync;
var program = require('commander');
var spawn = require('win-spawn');
var log = console.log;
var run = require('../lib/utils/run');

program
  .version(require('../package').version, '-v, --version')
  .usage('<command> [options]')
  .on('--help', printHelp)
  .parse(process.argv);

// 副命令
var subcmd = program.args[0];
var args = process.argv.slice(3);
// 可执行命令
var bin;

// 若没有参数
if(!subcmd){
  program.help();
}
// 判定是否为打印command的help信息的指令
else if(subcmd === 'help'){
  var helpcmd = program.args[1];
  bin = executable(helpcmd);
  // 若不存在要查看help的命令，则打印主程序的help信息
  if (!helpcmd || !bin) {
    process.stdout.write(program.helpInformation());
    program.emit('--help');
    process.exit(0);
  }
  log(bin)
  wrap(spawn(bin, ['--help'], {stdio: 'inherit'}));
}
// 若为command指令
else{
  bin = executable(subcmd);
  if (bin) {
    //run.record(subcmd);
    wrap(spawn(bin, args, {stdio: 'inherit', customFds: [0, 1, 2]}));
  } else {
    program.help();
  }
}

// 打印帮助文档
function printHelp() {
  log([
    "  Commands:",
    "",
    "    init           Initialize a front-end project",
    ""
  ].join('\n'));
  process.exit();
}
// 判定命令是否存在
function executable(subcmd) {
  var file = join(__dirname, 'hb-' + subcmd);
  if (exists(file)) {
    return file;
  }
}

function wrap(sp) {
  log(sp)
  sp.on('close', function(code) {
    process.exit(code);
  });
}
