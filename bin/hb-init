#!/usr/bin/env node

var color = require('colorful').color;
var fs = require('fs');
var path = require('path');
var program = require('commander');
var vfs = require('vinyl-fs');
var gulpTemplate = require('gulp-template');
var inquirer = require('inquirer');
var semver = require('semver');
var emptyDir = require('empty-dir').sync;
var log = console.log;

program
  .option('-p, --package','Just add a package.json into your project.')
  .on('--help', printHelp)
  .parse(process.argv);

/**
 * template
 */
var homeDir = process.env.HOME || process.env.USERPROFILE;
if (!homeDir) {
  homeDir = process.env.HOMEDRIVE + process.env.HOMEPATH;
}
var template = path.dirname(__dirname) + '/lib/template/';

template = template.replace(/^~/, homeDir);

if (!emptyDir(process.cwd()) && !program.package) {
  console.warn(color.yellow('Existing files here, please run init command in an empty folder!'));
  return;
}

console.log('Creating a hb front-end project: ');

inquirer.prompt([{
  message: 'project name',
  name: 'name',
  default: path.basename(process.cwd()),
  validate: function(input) {
    var done = this.async();
    // TODO:检查名称的合法性
    done(true);
  }
}, {
  message: 'Version',
  name: 'version',
  default: '0.0.0',
  validate: function(input) {
    var done = this.async();
    if (!semver.valid(input)) {
      console.warn(color.red('Must be a valid semantic version (semver.org).'));
      return;
    }
    done(true);
  }
}, {
  message: 'Description',
  name: 'description'
}, {
  message: 'Author',
  name: 'author',
  default: ''
}], function( answers ) {
  answers.varName = answers.name.replace(/\-(\w)/g, function(all, letter){
    return letter.toUpperCase();
  });

  if (program.package) {
    vfs.src(path.join(template,'package.json'))
      .pipe(gulpTemplate(answers))
      .pipe(vfs.dest('./'))
      .on('end', function(){
        console.log(color.green('Initialize a package.json Succeccfully!'));
      });
    return
  }
  vfs.src(path.join(template, '**'), { dot: true })
    .pipe(gulpTemplate(answers))
    .pipe(vfs.dest('./'))
    .on('end', function() {
      // https://github.com/npm/npm/issues/1862
      fs.renameSync('./gitignore', './.gitignore');

      console.log();
      console.log(color.green('Initialize a hb project Succeccfully!'));
      console.log();
    });

});

function printHelp() {
  log([
    "  Examples:",
    "",
    "  $  hb init           Initialize a front-end project",
    "  $  hb init -p        Add a package.json into your project",
    "",
  ].join('\n'));
  process.exit();
}
